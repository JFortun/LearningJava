openapi: 3.0.3

info:
  version: 1.0.0
  title: Backend API
  description: Backend API to interact with accounts data
  contact:
    name: JFortun
    url: https://github.com/JFortun
    email: josemanuelfortunromero@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://{domain}:{port}
    description: Local development server
    variables:
      domain:
        default: 'localhost'
      port:
        enum:
          - '8080'
          - '80'
        default: '8080'

paths:
  /accounts:
    get:
      tags:
        - Accounts
      operationId: getAllAccounts
      description: Returns a list of accounts
      responses:
        '200':
          description: Successfully returned a list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountODTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Accounts
      operationId: createAccount
      description: Creates a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAccountIDTO'
            example:
              summary: Example of an account parameters
              value:
                role: user
                email: user@mail.com
                name: John
                password: john123
                birthday: 2022-01-01
                capital: 10050
      responses:
        '200':
          description: Successfully created a new account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountODTO'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    AccountODTO:
      type: object
      required:
        - id
        - role
        - email
        - name
        - password
        - birthday
        - capital
      properties:
        id:
          type: integer
        role:
          $ref: '#/components/schemas/RoleDTO'
        email:
          type: string
        name:
          type: string
        password:
          type: string
        birthday:
          type: string
          format: date
        capital:
          type: integer
    createAccountIDTO:
      type: object
      required:
        - role
        - email
        - name
        - password
        - birthday
        - capital
      properties:
        role:
          $ref: '#/components/schemas/RoleDTO'
        email:
          type: string
        name:
          type: string
        password:
          type: string
        birthday:
          type: string
          format: date
        capital:
          type: integer
    RoleDTO:
      type: string
      enum: [ admin, user, guest ]
    Error:
      type: object
      properties:
        message:
          type: string